{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\Hackathon\\\\Frontend\\\\ecampus\\\\src\\\\CartContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n  const addToCart = item => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(cartItem => cartItem.id === item.id);\n      if (existingItem) {\n        // If item already exists, increase quantity\n        return prevItems.map(cartItem => cartItem.id === item.id ? {\n          ...cartItem,\n          quantity: cartItem.quantity + 1\n        } : cartItem);\n      } else {\n        // If new item, add with quantity 1\n        return [...prevItems, {\n          ...item,\n          quantity: 1\n        }];\n      }\n    });\n  };\n  const removeFromCart = id => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== id));\n  };\n  const updateQuantity = (id, change) => {\n    setCartItems(prevItems => prevItems.map(item => {\n      if (item.id === id) {\n        const newQuantity = Math.max(0, item.quantity + change);\n        return newQuantity === 0 ? null : {\n          ...item,\n          quantity: newQuantity\n        };\n      }\n      return item;\n    }).filter(Boolean));\n  };\n  const clearCart = () => {\n    setCartItems([]);\n  };\n  const getCartCount = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n  const getCartTotal = () => {\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart,\n      getCartCount,\n      getCartTotal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s2(CartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","jsxDEV","_jsxDEV","CartContext","useCart","context","Error","CartProvider","children","cartItems","setCartItems","addToCart","item","prevItems","existingItem","find","cartItem","id","map","quantity","removeFromCart","filter","updateQuantity","change","newQuantity","Math","max","Boolean","clearCart","getCartCount","reduce","total","getCartTotal","price","Provider","value","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Hackathon/Frontend/ecampus/src/CartContext.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { createContext, useContext, useState } from \"react\"\r\n\r\nconst CartContext = createContext()\r\n\r\nexport const useCart = () => {\r\n    const context = useContext(CartContext)\r\n    if (!context) {\r\n        throw new Error(\"useCart must be used within a CartProvider\")\r\n    }\r\n    return context\r\n}\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [cartItems, setCartItems] = useState([])\r\n\r\n    const addToCart = (item) => {\r\n        setCartItems((prevItems) => {\r\n            const existingItem = prevItems.find((cartItem) => cartItem.id === item.id)\r\n\r\n            if (existingItem) {\r\n                // If item already exists, increase quantity\r\n                return prevItems.map((cartItem) =>\r\n                    cartItem.id === item.id ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem,\r\n                )\r\n            } else {\r\n                // If new item, add with quantity 1\r\n                return [...prevItems, { ...item, quantity: 1 }]\r\n            }\r\n        })\r\n    }\r\n\r\n    const removeFromCart = (id) => {\r\n        setCartItems((prevItems) => prevItems.filter((item) => item.id !== id))\r\n    }\r\n\r\n    const updateQuantity = (id, change) => {\r\n        setCartItems((prevItems) =>\r\n            prevItems\r\n                .map((item) => {\r\n                    if (item.id === id) {\r\n                        const newQuantity = Math.max(0, item.quantity + change)\r\n                        return newQuantity === 0 ? null : { ...item, quantity: newQuantity }\r\n                    }\r\n                    return item\r\n                })\r\n                .filter(Boolean),\r\n        )\r\n    }\r\n\r\n    const clearCart = () => {\r\n        setCartItems([])\r\n    }\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((total, item) => total + item.quantity, 0)\r\n    }\r\n\r\n    const getCartTotal = () => {\r\n        return cartItems.reduce((total, item) => total + item.price * item.quantity, 0)\r\n    }\r\n\r\n    return (\r\n        <CartContext.Provider\r\n            value={{\r\n                cartItems,\r\n                addToCart,\r\n                removeFromCart,\r\n                updateQuantity,\r\n                clearCart,\r\n                getCartCount,\r\n                getCartTotal,\r\n            }}\r\n        >\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}